
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 79, types: 55, coercions: 0, joins: 0/1}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T18903.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T18903.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T18903.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T18903.$trModule3 = GHC.Types.TrNameS T18903.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T18903.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T18903.$trModule2 = "T18903"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T18903.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T18903.$trModule1 = GHC.Types.TrNameS T18903.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T18903.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T18903.$trModule
  = GHC.Types.Module T18903.$trModule3 T18903.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T18903.h1 :: Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T18903.h1 = GHC.Types.I# -2#

-- RHS size: {terms: 50, types: 41, coercions: 0, joins: 0/1}
T18903.$wh [InlPrag=[2]] :: GHC.Prim.Int# -> GHC.Prim.Int#
[GblId,
 Arity=1,
 Str=<MU>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [70] 222 0}]
T18903.$wh
  = \ (ww :: GHC.Prim.Int#) ->
      let {
        $wg [InlPrag=NOINLINE, Dmd=1C1(P(1P(U),U))]
          :: GHC.Prim.Int# -> (# Int, GHC.Prim.Int# #)
        [LclId, Arity=1, Str=<SU>, Unf=OtherCon []]
        $wg
          = \ (ww1 [OS=OneShot] :: GHC.Prim.Int#) ->
              case ww1 of ds {
                __DEFAULT ->
                  case GHC.Classes.divInt# 2# ds of ww4 { __DEFAULT ->
                  (# GHC.Types.I# (GHC.Prim.*# 2# ds), ww4 #)
                  };
                -1# -> (# T18903.h1, -2# #);
                0# -> case GHC.Real.divZeroError of wild { };
                1# -> (# GHC.Types.I# ww, 0# #)
              } } in
      case ww of ds {
        __DEFAULT ->
          case $wg ds of { (# ww2, ww3 #) ->
          case ww2 of { GHC.Types.I# x -> GHC.Prim.+# x ww3 }
          };
        1# -> 0#;
        2# -> case $wg 2# of { (# ww2, ww3 #) -> ww3 }
      }

-- RHS size: {terms: 10, types: 4, coercions: 0, joins: 0/0}
h [InlPrag=[2]] :: Int -> Int
[GblId,
 Arity=1,
 Str=<SP(MU)>,
 Cpr=*c1(#),
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once1!] :: Int) ->
                 case w of { GHC.Types.I# ww1 [Occ=Once1] ->
                 case T18903.$wh ww1 of ww2 [Occ=Once1] { __DEFAULT ->
                 GHC.Types.I# ww2
                 }
                 }}]
h = \ (w :: Int) ->
      case w of { GHC.Types.I# ww1 ->
      case T18903.$wh ww1 of ww2 { __DEFAULT -> GHC.Types.I# ww2 }
      }



